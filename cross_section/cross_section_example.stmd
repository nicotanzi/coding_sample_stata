% Time Series Coding Sample in STATA
% Nicol√°s Tanzi
% `s c(current_date)`

Cross Section Example
=====================

First, a typical set up. You can dowload the data from
[here](https://github.com/nicotanzi/coding_sample_stata/tree/main/cross_section),
as well as the code itself.

```
* WorkingDirectory
cd "your-directory"
* Log-File
log using registro, replace
* Packages
*net install grc1leg, from(http://www.stata.com/users/vwiggins) /* many graphs, one legend */
* Load data
use russia, clear
```
```s/
    quietly cd "D:\Trabajo\Coding Sample\coding_sample_stata\cross_section"
    quietly use russia, clear
```

## A LITTLE BIT OF LOOPS, MACRO USAGE AND GRAPHICS

Among different variables we've got these:

```s
  describe satlif marsta* gender
```

I'm curious about satisfaction with life.

Does marital status plays a role? Does gender?

Let's do some plots

```
egen temp = rowtotal(marsta*)
gen marsta0 = 1-temp
label variable marsta0 "Forever alone" /* XD */
drop temp
```
```s/
    quietly egen temp = rowtotal(marsta*)
    quietly gen marsta0 = 1-temp
    quietly label variable marsta0 "Forever alone" /* XD */
    quietly drop temp
```

Now a cool loop
```
forvalues k = 0(1)4{
  local titulo : variable label marsta`k'
  twoway (histogram satlif if gender==1 & marsta`k'==1, bin(5) color(red%30)) ///        
       (histogram satlif if gender==0 & marsta`k'==1, bin(5) color(green%30)), ///   
        name(H_`k') title("`titulo'") legend(order(1 "Male" 2 "Female" ))
}
quietly graph dir H_*
grc1leg `r(list)', l1(Density) legendfrom(H_1)
graph close H_*
```
```s/
    forvalues k = 0(1)4{
    local titulo : variable label marsta`k'
    twoway (histogram satlif if gender==1 & marsta`k'==1, bin(5) color(red%30)) ///        
          (histogram satlif if gender==0 & marsta`k'==1, bin(5) color(green%30)), ///   
            name(H_`k') title("`titulo'") legend(order(1 "Male" 2 "Female" ))
    }
    quietly graph dir H_*
    grc1leg `r(list)', l1(Density) legendfrom(H_1)
    quietly graph export multi_hist.png, width(500) replace
    graph close H_*
```

![Multiple overlayed histograms](multi_hist.png)

It looks interesting...

Another interesting looking thing, is the variable:
```s
    describe hhpres
```

Does it have a relationship with any variable?

Let's see:
```
ds hhpres, not
foreach v of varlist `r(varlist)' {
	quietly ttest `v', by(hhpres)
	if r(p)<0.01 {
		display "`: var label `v''"
	}
}
```
```s/
    quietly ds hhpres, not
    foreach v of varlist `r(varlist)' {
	     quietly ttest `v', by(hhpres)
	      if r(p)<0.01 {
		        display "`: var label `v''"
	      }
    }
```

## SOME CODE LINES WITH THE GOOD OLD OLS

Suppose that we want to explain a continuous variable using another continuous
variable, so we don't have many options:
```s
    describe totexp monage htself tincm_r
```
```
reg totexp monage
```
```s/
    reg totexp monage
```

Let's do bad things and over-fit the regression using a polynomial. In fact,
let's see how R^2 changes while the degree of the polynomial rises.
```
matrix mat_r = J(10,2,.)
forvalues k = 1(1)10{
	quietly gen monage_`k' = monage^`k'
	quietly ds monage_*
	quietly reg totexp `r(varlist)'
	quietly matrix mat_r[`k',2] = e(r2)
	quietly matrix mat_r[`k',1] = `k'
}
```
```s/
    quietly matrix mat_r = J(10,2,.)
    forvalues k = 1(1)10{
	     quietly gen monage_`k' = monage^`k'
	     quietly ds monage_*
	     quietly reg totexp `r(varlist)'
	     quietly matrix mat_r[`k',2] = e(r2)
	     quietly matrix mat_r[`k',1] = `k'
    }
```

```
drop _all
svmat double mat_r
matrix drop mat_r
twoway connected mat_r2 mat_r1, ytitle("R{sup:2}") xtitle("Polynomial degree")
use russia, clear
```
```s/
    quietly drop _all
    quietly svmat double mat_r
    quietly matrix drop mat_r
    quietly twoway connected mat_r2 mat_r1, ytitle("R{sup:2}") xtitle("Polynomial degree")
    quietly graph export R2.png, width(500) replace
    quietly use russia, clear
```

![Over-fitting and $R^2$](R2.png)

To be continued...

## LOGIT AND PROBIT



## CLUSTERED STANDARD ERRORS



```
log close
```
